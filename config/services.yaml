services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    # Client service
    Phillarmonic\SyncopateBundle\Client\SyncopateClient:
        arguments:
            $httpClient: '@syncopate_http_client'
            $baseUrl: '%phillarmonic_syncopate.base_url%'
            $defaultOptions:
                timeout: '%phillarmonic_syncopate.timeout%'
                # Memory optimization settings for HTTP client
                buffer: false
                max_duration: 600  # Increase timeout for large operations (10 minutes)
                # Don't buffer in memory
                on_progress: '@syncopate_response_progress_callback'
        public: true

    # Response progress callback service to handle memory optimization
    syncopate_response_progress_callback:
        class: Closure
        factory: ['Phillarmonic\SyncopateBundle\Service\HttpClientFactory', 'createProgressCallback']
        # This callback helps release memory as chunks are processed

    # Http client with retry capability and optimized memory settings
    syncopate_http_client:
        class: Symfony\Component\HttpClient\RetryableHttpClient
        arguments:
            $client: '@syncopate_base_http_client'
            $strategy: '@syncopate_retry_strategy'
            $maxRetries: '%phillarmonic_syncopate.max_retries%'

    # Base HTTP client with memory optimization
    syncopate_base_http_client:
        class: Symfony\Component\HttpClient\NativeHttpClient
        arguments:
            $defaultOptions:
                max_redirects: 5
                # Memory optimization settings
                buffer: false  # Don't buffer whole response in memory
                # Use temp files for handling large responses
                headers:
                    'Accept-Encoding': 'zstd, gzip, deflate'
                    'Connection': 'keep-alive'
                timeout: '%phillarmonic_syncopate.timeout%'

    # Retry strategy for an http client
    syncopate_retry_strategy:
        class: Symfony\Component\HttpClient\Retry\GenericRetryStrategy
        arguments:
            - [0, 423, 425, 429, 500, 502, 503, 504, 507, 510]  # $statusCodes
            - '%phillarmonic_syncopate.retry_delay%'            # $delayMs
            - 2                                                  # $multiplier
            - 60000                                              # $maxDelayMs
            - 0.1                                                # $jitter

    # Entity type registry service with lazy loading
    Phillarmonic\SyncopateBundle\Service\EntityTypeRegistry:
        arguments:
            $entityPaths: '%phillarmonic_syncopate.entity_paths%'
            $autoCreateEntityTypes: '%phillarmonic_syncopate.auto_create_entity_types%'
            $cacheEntityTypes: '%phillarmonic_syncopate.cache_entity_types%'
            $cacheTtl: '%phillarmonic_syncopate.cache_ttl%'
        lazy: true  # Use lazy loading to avoid unnecessary initialization
        calls:
            - [initialize, []]

    # Main service for interacting with SyncopateDB
    Phillarmonic\SyncopateBundle\Service\SyncopateService:
        arguments:
            $client: '@Phillarmonic\SyncopateBundle\Client\SyncopateClient'
            $entityTypeRegistry: '@Phillarmonic\SyncopateBundle\Service\EntityTypeRegistry'
        public: true

    # Entity mapper with object caching
    Phillarmonic\SyncopateBundle\Mapper\EntityMapper:
        public: false

    # Repository factory
    Phillarmonic\SyncopateBundle\Repository\EntityRepositoryFactory:
        arguments:
            $syncopateService: '@Phillarmonic\SyncopateBundle\Service\SyncopateService'
            $entityMapper: '@Phillarmonic\SyncopateBundle\Mapper\EntityMapper'
        public: true

    Phillarmonic\SyncopateBundle\Service\RepositoryRegistry:
        autowire: true∆í
        autoconfigure: true

    Phillarmonic\SyncopateBundle\Repository\EntityRepository:
            autowire: true
            autoconfigure: true
            public: false
            abstract: true

    # This catches all custom repositories
    _instanceof:
        Phillarmonic\SyncopateBundle\Repository\EntityRepository:
            autowire: true
            tags: [ 'syncopate.repository' ]

    Phillarmonic\SyncopateBundle\Command\RegisterEntityTypesCommand:
        tags:
            - { name: console.command }

    Phillarmonic\SyncopateBundle\Metadata\RelationshipMetadata:
        public: false
        shared: false  # Create new instance each time to avoid memory issues

    Phillarmonic\SyncopateBundle\Service\RelationshipRegistry:
        public: false

    # Helper service for HTTP client factory
    Phillarmonic\SyncopateBundle\Service\HttpClientFactory:
        public: false